-- Exported from QuickDBD: https://www.quickdatabasediagrams.com/
-- Link to schema: https://app.quickdatabasediagrams.com/#/d/P9za9H
-- NOTE! If you have used non-SQL datatypes in your design, you will have to change these here.


CREATE TABLE "Story" (
    "Id" int   NOT NULL,
    "Name" str   NOT NULL,
    "PlayerMax" int   NOT NULL,
    "CreateAt" date   NOT NULL,
    "EditAt" date   NOT NULL,
    "DeleteAt" date   NOT NULL,
    "Deleted" bool   NOT NULL,
    "trigger" str   NOT NULL,
    "TriggerCount" int   NOT NULL,
    CONSTRAINT "pk_Story" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "StoryToUser" (
    "Id" int   NOT NULL,
    "StoryId" int   NOT NULL,
    "UserId" int   NOT NULL,
    CONSTRAINT "pk_StoryToUser" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Event" (
    "Id" int   NOT NULL,
    "chronology" int   NOT NULL,
    "title" str   NOT NULL,
    "description" str   NOT NULL,
    "content" str   NOT NULL,
    "trigger" str   NOT NULL,
    CONSTRAINT "pk_Event" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Entity" (
    "Id" int   NOT NULL,
    "Name" str   NOT NULL,
    "Image" str   NOT NULL,
    "Hp" int   NOT NULL,
    "Atk" int   NOT NULL,
    "Defense" int   NOT NULL,
    "trigger" str   NOT NULL,
    CONSTRAINT "pk_Entity" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "EntityInstance" (
    "id" int   NOT NULL,
    "entityId" int   NOT NULL,
    "roomId" int   NOT NULL,
    "hp" int   NOT NULL,
    "atk" int   NOT NULL,
    "defense" int   NOT NULL,
    "trigger" str   NOT NULL,
    CONSTRAINT "pk_EntityInstance" PRIMARY KEY (
        "id"
     )
);

CREATE TABLE "Character" (
    "Id" int   NOT NULL,
    "Name" str   NOT NULL,
    "Background" str   NOT NULL,
    "Image" str   NOT NULL,
    "Class" int   NOT NULL,
    CONSTRAINT "pk_Character" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Class" (
    "Id" int   NOT NULL,
    "Name" str   NOT NULL,
    "Description" str   NOT NULL,
    "Hp" int   NOT NULL,
    "Atk" int   NOT NULL,
    "Defense" int   NOT NULL,
    CONSTRAINT "pk_Class" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Action" (
    "Id" int   NOT NULL,
    "Name" str   NOT NULL,
    "Description" varchar   NOT NULL,
    "trigger" str   NOT NULL,
    CONSTRAINT "pk_Action" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "EventJoin" (
    "Id" int   NOT NULL,
    "Event" int   NOT NULL,
    "StoryId" int   NOT NULL,
    CONSTRAINT "pk_EventJoin" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "EntityJoin" (
    "Id" int   NOT NULL,
    "EntityId" int   NOT NULL,
    "StoryId" int   NOT NULL,
    CONSTRAINT "pk_EntityJoin" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "CharacterToUser" (
    "id" int   NOT NULL,
    "characterId" int   NOT NULL,
    "userId" int   NOT NULL,
    CONSTRAINT "pk_CharacterToUser" PRIMARY KEY (
        "id"
     )
);

CREATE TABLE "ActionToClass" (
    "Id" int   NOT NULL,
    "ClassId" int   NOT NULL,
    "ActionId" int   NOT NULL,
    CONSTRAINT "pk_ActionToClass" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "User" (
    "Id" int   NOT NULL,
    "FirstName" varchar   NOT NULL,
    "LastName" varchar   NOT NULL,
    "Login" varchar   NOT NULL,
    "password" varchar   NOT NULL,
    "Mail" varchar   NOT NULL,
    "DefaultId" str   NOT NULL,
    "Birthdate" date   NOT NULL,
    "nickname" str   NOT NULL,
    "Avatar" str   NOT NULL,
    "Is_active" bool   NOT NULL,
    "CreateAt" date   NOT NULL,
    "EditAt" date   NOT NULL,
    CONSTRAINT "pk_User" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Tickbox" (
    "Id" int   NOT NULL,
    "UserId" int   NOT NULL,
    "CreateAt" date   NOT NULL,
    "Check" bool   NOT NULL,
    CONSTRAINT "pk_Tickbox" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "UserContacts" (
    "Id" int   NOT NULL,
    "UserId" int   NOT NULL,
    "Contact" int   NOT NULL,
    CONSTRAINT "pk_UserContacts" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Contact" (
    "Id" int   NOT NULL,
    "SenderId" int   NOT NULL,
    "ReceiverId" int   NOT NULL,
    "Approved" bool   NOT NULL,
    "SentAt" date   NOT NULL,
    "ApprovedAt" date   NOT NULL,
    "RefusedAt" date   NOT NULL,
    CONSTRAINT "pk_Contact" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Room" (
    "Id" int   NOT NULL,
    "Title" varchar   NOT NULL,
    "CreateAt" date   NOT NULL,
    "EditAt" date   NOT NULL,
    "MaxParticipants" int   NOT NULL,
    "DeleteAt" date   NOT NULL,
    "isPublic" bool   NOT NULL,
    "isAdmin" bool   NOT NULL,
    CONSTRAINT "pk_Room" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "RoomParticipant" (
    "Id" int   NOT NULL,
    "RoomId" int   NOT NULL,
    "UserId" int   NOT NULL,
    "nickname" str  DEFAULT (user.nickname) NOT NULL,
    "Hit" int  DEFAULT (0) NOT NULL,
    "JoinAt" date   NOT NULL,
    "UpdateAt" date   NOT NULL,
    "IsAdmin" bool   NOT NULL,
    "Kicked" bool   NOT NULL,
    "Active" bool   NOT NULL,
    "LeftAt" date   NOT NULL,
    CONSTRAINT "pk_RoomParticipant" PRIMARY KEY (
        "Id"
     )
);

CREATE TABLE "Message" (
    "Id" int   NOT NULL,
    "RoomId" int   NOT NULL,
    "SenderId" int   NOT NULL,
    "MessageContent" str   NOT NULL,
    "fileURL" str   NOT NULL,
    "CreateAt" date   NOT NULL,
    "UpdateAt" date   NOT NULL,
    "Reply" bool   NOT NULL,
    "Edited" bool   NOT NULL,
    "DeleteAt" date   NOT NULL,
    "Deleted" bool   NOT NULL,
    CONSTRAINT "pk_Message" PRIMARY KEY (
        "Id"
     )
);

ALTER TABLE "StoryToUser" ADD CONSTRAINT "fk_StoryToUser_StoryId" FOREIGN KEY("StoryId")
REFERENCES "Story" ("Id");

ALTER TABLE "StoryToUser" ADD CONSTRAINT "fk_StoryToUser_UserId" FOREIGN KEY("UserId")
REFERENCES "User" ("Id");

ALTER TABLE "EntityInstance" ADD CONSTRAINT "fk_EntityInstance_entityId" FOREIGN KEY("entityId")
REFERENCES "Entity" ("Id");

ALTER TABLE "EntityInstance" ADD CONSTRAINT "fk_EntityInstance_roomId" FOREIGN KEY("roomId")
REFERENCES "Room" ("Id");

ALTER TABLE "Character" ADD CONSTRAINT "fk_Character_Class" FOREIGN KEY("Class")
REFERENCES "Class" ("Id");

ALTER TABLE "EventJoin" ADD CONSTRAINT "fk_EventJoin_Event" FOREIGN KEY("Event")
REFERENCES "Event" ("Id");

ALTER TABLE "EventJoin" ADD CONSTRAINT "fk_EventJoin_StoryId" FOREIGN KEY("StoryId")
REFERENCES "Story" ("Id");

ALTER TABLE "EntityJoin" ADD CONSTRAINT "fk_EntityJoin_EntityId" FOREIGN KEY("EntityId")
REFERENCES "Entity" ("Id");

ALTER TABLE "EntityJoin" ADD CONSTRAINT "fk_EntityJoin_StoryId" FOREIGN KEY("StoryId")
REFERENCES "Story" ("Id");

ALTER TABLE "CharacterToUser" ADD CONSTRAINT "fk_CharacterToUser_characterId" FOREIGN KEY("characterId")
REFERENCES "Character" ("Id");

ALTER TABLE "CharacterToUser" ADD CONSTRAINT "fk_CharacterToUser_userId" FOREIGN KEY("userId")
REFERENCES "User" ("Id");

ALTER TABLE "ActionToClass" ADD CONSTRAINT "fk_ActionToClass_ClassId" FOREIGN KEY("ClassId")
REFERENCES "Class" ("Id");

ALTER TABLE "ActionToClass" ADD CONSTRAINT "fk_ActionToClass_ActionId" FOREIGN KEY("ActionId")
REFERENCES "Action" ("Id");

ALTER TABLE "Tickbox" ADD CONSTRAINT "fk_Tickbox_UserId" FOREIGN KEY("UserId")
REFERENCES "User" ("Id");

ALTER TABLE "UserContacts" ADD CONSTRAINT "fk_UserContacts_UserId" FOREIGN KEY("UserId")
REFERENCES "User" ("Id");

ALTER TABLE "UserContacts" ADD CONSTRAINT "fk_UserContacts_Contact" FOREIGN KEY("Contact")
REFERENCES "Contact" ("Id");

ALTER TABLE "Contact" ADD CONSTRAINT "fk_Contact_SenderId" FOREIGN KEY("SenderId")
REFERENCES "User" ("Id");

ALTER TABLE "Contact" ADD CONSTRAINT "fk_Contact_ReceiverId" FOREIGN KEY("ReceiverId")
REFERENCES "User" ("Id");

ALTER TABLE "RoomParticipant" ADD CONSTRAINT "fk_RoomParticipant_RoomId" FOREIGN KEY("RoomId")
REFERENCES "Room" ("Id");

ALTER TABLE "RoomParticipant" ADD CONSTRAINT "fk_RoomParticipant_UserId" FOREIGN KEY("UserId")
REFERENCES "User" ("Id");

ALTER TABLE "Message" ADD CONSTRAINT "fk_Message_RoomId" FOREIGN KEY("RoomId")
REFERENCES "Room" ("Id");

ALTER TABLE "Message" ADD CONSTRAINT "fk_Message_SenderId" FOREIGN KEY("SenderId")
REFERENCES "RoomParticipant" ("Id");
