# Generated by Django 4.0.4 on 2022-05-02 14:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=100)),
                ('unique_id', models.SlugField(unique=True)),
                ('profile_pic', models.ImageField(default='uploads/profile_pics/default.jpg', upload_to='uploads/profile_pics')),
                ('birthdate', models.DateField()),
                ('last_edit', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('trigger', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('background', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='uploads/characters')),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, upload_to='uploads/entities')),
                ('hp', models.IntegerField()),
                ('atk', models.IntegerField()),
                ('defense', models.IntegerField()),
                ('trigger', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=300)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='uploads/events')),
                ('chronology', models.IntegerField()),
                ('trigger', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messageContent', models.TextField(max_length=500)),
                ('image', models.ImageField(blank=True, upload_to='uploads/messages')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('editedAt', models.DateTimeField(auto_now=True)),
                ('deletedAt', models.DateTimeField(blank=True)),
                ('quoted', models.BooleanField(default=False)),
                ('whispered', models.BooleanField(default=False)),
                ('edited', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('editedAt', models.DateTimeField(auto_now=True)),
                ('deletedAt', models.DateTimeField(blank=True)),
                ('maxParticipants', models.IntegerField(blank=True)),
                ('isPublic', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EntityInstance',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blablapp.entity')),
                ('currentHP', models.IntegerField(blank=True)),
                ('currentATK', models.IntegerField(blank=True)),
                ('currentDEF', models.IntegerField(blank=True)),
            ],
            bases=('blablapp.entity',),
        ),
        migrations.CreateModel(
            name='Whisper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messageId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blablapp.message')),
                ('receiverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='WhisperReceiver', to=settings.AUTH_USER_MODEL)),
                ('senderId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='WhisperSender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tickbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('editAt', models.DateTimeField(auto_now=True)),
                ('checked', models.BooleanField(default=False)),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=300)),
                ('image', models.ImageField(blank=True, upload_to='uploads/stories')),
                ('optimalPlayers', models.IntegerField(blank=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('editedAt', models.DateTimeField(auto_now=True)),
                ('deletedAt', models.DateTimeField(blank=True)),
                ('deleted', models.BooleanField(default=False)),
                ('trigger', models.CharField(max_length=10, unique=True)),
                ('triggerCount', models.IntegerField(blank=True)),
                ('entities', models.ManyToManyField(to='blablapp.entity')),
                ('events', models.ManyToManyField(to='blablapp.event')),
            ],
        ),
        migrations.CreateModel(
            name='RoomParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAdmin', models.BooleanField(default=False)),
                ('nickname', models.TextField(blank=True, max_length=30)),
                ('hit', models.IntegerField(default=0)),
                ('joinedAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('leftAt', models.DateTimeField(blank=True)),
                ('kicked', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('characterId', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='blablapp.character')),
                ('roomId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blablapp.room')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='storyId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blablapp.story'),
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messageId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='QuoteSender', to='blablapp.message')),
                ('quotedId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='QuoteReceiver', to='blablapp.message')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='roomId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blablapp.room'),
        ),
        migrations.AddField(
            model_name='message',
            name='senderId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('sentAt', models.DateTimeField(auto_now_add=True)),
                ('approvedAt', models.DateTimeField(blank=True)),
                ('refusedAt', models.DateTimeField(blank=True)),
                ('recieverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContactReceiver', to=settings.AUTH_USER_MODEL)),
                ('senderId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContactSender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=300)),
                ('hp', models.IntegerField()),
                ('atk', models.IntegerField()),
                ('defense', models.IntegerField()),
                ('actions', models.ManyToManyField(to='blablapp.action')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='characterClassId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blablapp.characterclass'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='characters',
            field=models.ManyToManyField(to='blablapp.character'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
